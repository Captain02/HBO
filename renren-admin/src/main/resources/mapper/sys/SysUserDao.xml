<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.sys.dao.SysUserDao">

	<resultMap id="userAll" type="io.renren.common.entity.PageData">
		<id column="user_id" property="user_id" />
		<result column="username" property="username" />
		<result column="email" property="email" />
		<result column="mobile" property="mobile" />
		<result column="create_time" property="create_time" />
		<result column="persionnum" property="persionnum" />
		<result column="wechart" property="wechart" />
		<result column="QQ" property="QQ" />
		<result column="college" property="college" />
		<result column="collegetie" property="collegetie" />
		<result column="gender" property="gender" />
		<result column="descs" property="descs" />
		<result column="filetable" property="filetable" />
		<result column="filename" property="filename" />
		<result column="filetable" property="filetable" />
		<result column="filepath" property="filepath" />
		<result column="corid" property="corid" />
		<result column="fileid" property="fileid" />
		<collection property="roles" select="selectRoleByUserRole" column="{user_id=user_id,corid=corid}"></collection>
		<collection property="depts" select="selectDeptByUserRole" column="{user_id=user_id,corid=corid}"></collection>
	</resultMap>

	<update id="updateUserByid">
		  UPDATE sys_user SET email = #{email},mobile = #{mobile},wechart = #{wechart},QQ = #{qq},
		  college = #{college},collegetie = #{collegetie},gender=#{gender},descs=#{descs},`name`=#{name}
		  WHERE user_id = #{userId}
	</update>

	<sql id="user_sql">
		sys_user.user_id,sys_user.username,sys_user.email,
		sys_user.mobile,sys_user.create_time,sys_user.persionnum,sys_user.wechart,sys_user.QQ,sys_user.college,
		sys_user.collegetie,sys_user.gender,sys_user.descs,filetable.filename,filetable.filepath,sys_user.salt,sys_user.`name`,
		sys_user.fileid
	</sql>

	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>
	
	<!-- 查询用户的所有菜单ID --> 
	<select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
		where ur.user_id = #{userId}
	</select>

	<select id="geUserPassword" resultType="String">
		SELECT `password` FROM sys_user WHERE `username` = #{pagedate.username}
	</select>

	<!--List<PageData> list = (List<PageData>) daoSupport.
				findForList("io.renren.modules.sys.dao.SysUserDao.userlistPage",page);-->
	<select resultType="io.renren.common.entity.PageData" id="userlistPage">
		SELECT
		<include refid="user_sql"></include>
		FROM sys_user
		LEFT JOIN filetable ON filetable.id = sys_user.fileid
		LEFT JOIN cor_user ON cor_user.userid = sys_user.user_id
		LEFT JOIN sys_user_dept ON sys_user_dept.deptid = sys_user.user_id
		LEFT JOIN sys_dept ON sys_dept.dept_id = sys_user_dept.deptid
		WHERE status = 1
		AND cor_user.corid = #{pd.corid}
	</select>

	<update id="removeUserByIds" parameterType="java.util.List">
		UPDATE sys_user SET  status = 0
		WHERE user_id IN
		<foreach collection="list" index="index" item="ids" open="(" separator="," close=")">
			#{ids}
		</foreach>
	</update>

	<!--
	PageData forObject = (PageData) daoSupport.findForObject("io.renren.modules.sys.dao.SysUserDao.getinfoByid", pageData);
	-->
	<select id="getinfoByid" resultMap="userAll">
		SELECT
		<include refid="user_sql"></include>,
		filetable.`filepath` headpath,#{corid} corid
		FROM sys_user
		LEFT JOIN filetable ON filetable.id = sys_user.fileid
		WHERE user_id = #{id}
	</select>
	<select id="selectRoleByUserRole" resultType="io.renren.common.entity.PageData">
		SELECT sys_role.role_id,role_name,remark,sys_role.create_time,corid
		FROM sys_role
		LEFT JOIN sys_user_role ON sys_user_role.role_id = sys_role.role_id
		WHERE
		sys_user_role.user_id = #{user_id}
		AND sys_role.corid = #{corid}
	</select>
	<select id="selectDeptByUserRole" resultType="io.renren.common.entity.PageData">
		SELECT dept_id,parent_id,`name`,order_num,del_flag,corid
		FROM sys_dept
		LEFT JOIN sys_user_dept ON sys_user_dept.deptid = sys_dept.dept_id
		WHERE
		sys_user_dept.userid = #{user_id}
		AND sys_dept.corid = #{corid}
	</select>

	<!--saveUserCor-->
	<insert id="saveUserCor">
		INSERT INTO cor_user (userid,corid)VALUES (#{userid},#{corid})
	</insert>
	<!--查询用户是否有部门-->
	<select id="selectUserDept" resultType="io.renren.common.entity.PageData">
		SELECT count(*) num FROM sys_user_dept WHERE userid = #{user_id} AND corid=#{corid}
	</select>

	<!--修改用户部门-->
	<update id="updateUserDept">
		UPDATE sys_user_dept SET deptid = #{dept_id} WHERE userid = #{user_id} AND corid=#{corid}
	</update>
	<!--保存用户部门-->
	<insert id="saveUserDept">
		insert into sys_user_dept (deptid,userid,corid) values (#{dept_id},#{user_id},#{corid});
	</insert>
	<!--上传头像-->
	<insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into filetable(`filename`,`filepath`) values (#{fileName},#{url})
	</insert>

	<!--selectUserByUsername-->
	<select id="selectUserByUsername" resultMap="userAll">
		SELECT
		<include refid="user_sql"></include>,
		filetable.`filepath` headpath,#{corid} corid
		FROM sys_user
		LEFT JOIN filetable ON filetable.id = sys_user.fileid
		WHERE username = #{username}
	</select>

    <delete id="delChatHead">
        DELETE FROM filetable WHERE id = #{id,jdbcType=INTEGER}
    </delete>
</mapper>