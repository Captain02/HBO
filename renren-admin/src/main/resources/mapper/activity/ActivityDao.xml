<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ActivityDao">

    <resultMap id="activityPageData" type="io.renren.common.entity.PageData">
        <id column="actid" property="actid"></id>
        <association property="video" column="{id=videoid}" select="FileDao.selectById"/>
        <association property="QRCode" column="{id=fileid}" select="FileDao.selectById"/>
        <association property="enclosureFile" column="{id=enclosure}" select="FileDao.selectById"/>
        <association property="image" column="{id=images}" select="FileDao.selectById"/>
        <association property="corporation" column="actcorid" select="selectCorByCorid"/>
        <association property="actleading" column="{id=actleading}"
                     select="io.renren.modules.sys.dao.SysUserDao.getinfoByid"/>
        <association property="bbs_like" column="actid" select="bbslikeDao.selectLikeByActid"/>
        <association property="bbs_replies" column="actid" select="bbslikeDao.selectRepliesByActid"/>
        <association property="bbs_collection" column="actid" select="bbslikeDao.selectCollectionByActid"/>
        <collection property="processnodes" column="actid" select="ActprocessDao.selectActprocessForActivity"/>
        <collection property="crowdpeople" column="actid" select="selectCrowdPeopleByactId"/>
        <collection property="likePeople" column="actid" select="selectLikePeopleByActId"></collection>
    </resultMap>

    <resultMap id="bbsReplies" type="io.renren.common.entity.PageData">
        <id column="repliesid" property="repliesid"></id>
        <collection property="likeNumber" column="repliesid" select="getLikeNumber"></collection>
        <!--<collection property="likePeople" column="repliesid" select="getLikeNumber"></collection>-->
        <collection property="child" column="repliesid" select="getReplies"></collection>
    </resultMap>

    <select id="activitylistPage" resultMap="activityPageData">
        SELECT c.`actname`,c.`actstarttame`,c.`actendtime`,c.`createtime`,c.`actid`,
        c1.`corname`,f.`filepath`,
        COUNT(DISTINCT l.`userid`) likeCount,
        COUNT(DISTINCT c2.`userid`) collectionCount
        FROM `coractivity` c
        LEFT JOIN `corporation` c1 ON c1.`id` = c.`actcorid`
        LEFT JOIN `sys_user` u ON u.`user_id` = c.`actleading`
        LEFT JOIN `filetable` f ON f.`id` = u.`fileid`
        LEFT JOIN `bbs_like` l ON l.`topicid` = c.`actid`
        LEFT JOIN `bbs_collection` c2 ON c2.`topicid` = c.`actcorid`
        <where>
            <if test="pd.corId!=null">
                c1.`id`=#{pd.corId,jdbcType=INTEGER}
            </if>
            <if test="pd.actName!=null and pd.actName!=''">
                AND c.`actname` LIKE CONCAT('%',#{pd.actName,jdbcType=VARCHAR},'%')
            </if>
            <if test="pd.isAct!=null">
                and c.`isact`=#{pd.isAct,jdbcType=INTEGER}
            </if>
        </where>
        GROUP BY c.`actid`
    </select>

    <select id="getActivityById" resultMap="activityPageData">
        SELECT
`actid`,`actname`,`actstarttame`,`actendtime`,`createtime`,`actdetails`,`actcorid`,`actleading`,
`fileid`,`videoid`,`images`,`actprocessid`,`profile`,`isact`,`enclosure`
FROM
coractivity
WHERE `actid` = #{actid}
    </select>
    <!--<select id="selectActprocessForActivity" resultType="io.renren.common.entity.PageData">
        SELECT `actid`,`proid`,`processnode`,`states` FROM `actprocess` WHERE actid = #{pd.actId,jdbcType=INTEGER} ORDER BY `proid`
    </select>-->

    <insert id="add" useGeneratedKeys="true" keyProperty="actId">
        insert into `coractivity` (`actname`,`actstarttame`,`actendtime`,`actleading`,`profile`,`actcorid`
        <trim prefix="," suffixOverrides=",">
            <if test="actdetails!=''">
                `actdetails`,
            </if>
            <if test="videoid!=''">
                `videoid`,
            </if>
            <if test="images!=''">
                `images`,
            </if>
            <if test="fileId!=null">
                `fileid`,
            </if>
            <if test="enclosureid != null">
                #{enclosure,jdbcType=INTEGER},
            </if>
        </trim>
        )
        values(#{actName,jdbcType=VARCHAR},
        #{actStartTime,jdbcType=VARCHAR},
        #{actEndTime,jdbcType=VARCHAR},
        #{actLeader,jdbcType=INTEGER},
        #{profile,jdbcType=VARCHAR},#{actCorId,jdbcType=INTEGER}
        <trim prefix="," suffixOverrides=",">
            <if test="actdetails != ''">
                #{actdetails,jdbcType=VARCHAR},
            </if>
            <if test="videoid != ''">
                #{videoid,jdbcType=INTEGER},
            </if>
            <if test="images != ''">
                #{images,jdbcType=INTEGER},
            </if>
            <if test="fileId != null">
                #{fileId,jdbcType=INTEGER},
            </if>
            <if test="enclosureid != null">
                #{enclosureid,jdbcType=INTEGER},
            </if>
        </trim>
        )
    </insert>

    <update id="updateAct">
        update `coractivity`
        <set>
            <if test="actName!=null">
                `actname` = #{actName,jdbcType=VARCHAR},
            </if>
            <if test="actStartTime!=null">
                `actstarttame` = #{actStartTime,jdbcType=VARCHAR},
            </if>
            <if test="actEndTime!=null">
                `actendtime` = #{actEndTime,jdbcType=VARCHAR},
            </if>
            <if test="actDetails!=null">
                `actdetails` = #{actDetails,jdbcType=VARCHAR},
            </if>
            <if test="actLeading!=null">
                `actleading` = #{actLeading,jdbcType=INTEGER},
            </if>
            <if test="videoId!=null">
                `videoid` = #{videoId,jdbcType=INTEGER},
            </if>

            <if test="images!=null">
                `images` = #{images,jdbcType=INTEGER},
            </if>
            <if test="profile!=null">
                `profile` = #{profile,jdbcType=VARCHAR},
            </if>
            <if test="isact!=null">
                `isact` = #{isact,jdbcType=INTEGER}
            </if>
        </set>
        WHERE `actid` = #{actId,jdbcType=INTEGER}
    </update>

    <insert id="addActCroWdPeople">
        INSERT INTO actcrowd (`actid`,`crowdpeople`)
        VALUES
        <foreach collection="list" item="item" separator=",">
            ( #{actId},#{item})
        </foreach>
    </insert>

    <select id="selectCrowdPeopleByactId" resultType="io.renren.common.entity.PageData">
      SELECT sys_dict.`id`,sys_dict.`name`
      FROM sys_dict
      LEFT JOIN actcrowd ON sys_dict.`id` = actcrowd.`crowdpeople`
      WHERE actcrowd.`actid` = #{actid}
    </select>

    <select id="selectCorByCorid" resultType="io.renren.common.entity.PageData">
      SELECT `corname`,`id`
      FROM corporation
      WHERE corporation.`id` = #{actcorid}
    </select>
    <select id="selectLikePeopleByActId" resultType="Long">
        SELECT `userid`
        FROM bbs_like
        WHERE topicid = #{actid}
    </select>

    <select id="getReplies" resultMap="bbsReplies">
        SELECT `repliesid`,`userid`,`parentid`,`topicid`,`createtime`,`repliescontent`,`states`
        FROM replies
        WHERE `topicid` = #{topicid} AND `parentid` = #{repliesid}
    </select>

    <select id="getLikeNumber" resultType="Long">
        SELECT count(*) AS num
        FROM bbs_replies_like
        WHERE repliesid = #{repliesid}
    </select>

</mapper>