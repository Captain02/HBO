<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="NewsDao">
    <resultMap id="newsReplice" type="io.renren.common.entity.PageData">
        <id column="id" property="id"></id>
        <association property="RepliceUser" select="io.renren.modules.sys.dao.SysUserDao.getinfoByIdNotContentRoleDept" column="{id=userid}"></association>
        <association property="ReplicedUser" select="io.renren.modules.sys.dao.SysUserDao.getinfoByIdNotContentRoleDept" column="{id=repliesuserid}"></association>
        <association property="likenum" column="id" select="selectlikenum"></association>
        <collection property="likeuser" column="id" select="selectlikeuser"></collection>
        <collection property="getNewsReplice" column="{topicid=topicid,parentid=id}" select="getNewNewsReplice"></collection>
    </resultMap>

    <resultMap id="newsPageData" type="io.renren.common.entity.PageData">
        <id column="id" property="id"></id>
<!--        <association property="video" column="{id=videoid}" select="FileDao.selectById"/>-->
        <association property="releaseuser" column="{id=releaseuser}"
                     select="io.renren.modules.sys.dao.SysUserDao.getinfoByIdNotContentRoleDept"/>
        <association property="deptInfo" column="{deptId=deptid}"
                     select="io.renren.modules.sys.dao.SysDeptDao.selectDeptById"></association>
        <association property="news_like" column="id" select="newslikeDao.selectLikeById"/>
        <association property="news_replies" column="id" select="newslikeDao.selectRepliesById"/>
        <collection property="likePeople" column="id" select="selectLikePeopleById"></collection>
    </resultMap>

    <resultMap id="newsListPage" type="io.renren.common.entity.PageData">
        <id column="id" property="id"></id>
        <association property="replicenum" column="id" select="replicenum"></association>
        <association property="likenum" column="id" select="likenum"></association>
<!--        <association property="video" column="{id=videoid}" select="FileDao.selectById"/>-->
        <association property="releaseuser" column="{id=releaseuser}"
                     select="io.renren.modules.sys.dao.SysUserDao.getinfoByIdNotContentRoleDept"/>
        <association property="deptInfo" column="{deptId=deptid}"
                     select="io.renren.modules.sys.dao.SysDeptDao.selectDeptById"></association>
        <association property="news_like" column="id" select="newslikeDao.selectLikeById"/>
        <collection property="likePeople" column="id" select="selectLikePeopleById"></collection>
    </resultMap>

    <resultMap id="newsReplies" type="io.renren.common.entity.PageData">
        <id column="id" property="id"></id>
        <result column="topicid" property="topicid"></result>
        <association property="repliedpeople" column="{id=repliesuserid}"
                     select="io.renren.modules.sys.dao.SysUserDao.getinfoByIdNotContentRoleDept"></association>
        <association property="likeNumber" column="id" select="getLikeNumber"></association>
        <association property="repliespeople" column="{id=userid}"
                     select="io.renren.modules.sys.dao.SysUserDao.getinfoByIdNotContentRoleDept"></association>
        <collection property="likePeopleIds" column="id" select="getlikePeopleIds"></collection>
        <collection property="child" column="{topicid=topicid,id=id}" select="getReplies"></collection>
    </resultMap>

    <select id="replicenum" resultType="io.renren.common.entity.PageData">
        SELECT count(*) num
        FROM news_replies
        WHERE news_replies.`topicid` = #{id}
    </select>

    <select id="likenum" resultType="io.renren.common.entity.PageData">
        SELECT count(*) num
        FROM news_like
        WHERE news_like.`topicid` = #{id}
    </select>

    <select id="newslistPage" resultMap="newsListPage">
        SELECT DISTINCT n.`content`,n.`createtime`,n.`title`,n.`corid`,n.`deptid`,n.`releaseuser`,n.`id`,
        c.`corname`
        FROM `actnews` n
        LEFT JOIN `corporation` c ON c.`id`=n.`corid`
        WHERE 1 = 1
        <if test="pd.corid != null and pd.corid!=''">
            AND c.`id`=#{pd.corid,jdbcType=INTEGER}
        </if>
        <if test="pd.title!=null and pd.title!=''">
            AND n.`title` like CONCAT('%',#{pd.title,jdbcType=VARCHAR},'%')
        </if>
        <if test="pd.isNews!=null">
            AND n.`isnews`=#{pd.isNews,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getNewsById" resultMap="newsPageData">
        select n.`title`,n.`createtime`,n.`releaseuser`,n.`content`,n.`corid`,n.`deptid`,n.`id`,
            d.`name`,c.`corname`
        from `actnews` n
        LEFT JOIN `corporation` c ON c.`id`=n.`corid`
        LEFT JOIN sys_dept d ON d.`dept_id` = n.`deptid`
        WHERE n.`id` = #{id}
    </select>

    <select id="selectLikePeopleById" resultType="Long">
        SELECT `userid`
        FROM news_like
        WHERE topicid = #{id,jdbcType=INTEGER}
    </select>

    <select id="getReplieslistPage" resultMap="newsReplies">
        SELECT `id`,`userid`,`parentid`,`topicid`,`createtime`,`repliescontent`,`states`,`repliesuserid`
        FROM news_replies
        WHERE `topicid` = #{pd.topicid}
        AND `parentid` = #{pd.id}
    </select>

    <select id="getLikeNumber" resultType="Long">
        SELECT count(*) AS num
        FROM news_replies_like
        WHERE repliesid = #{id}
    </select>

    <select id="getlikePeopleIds" resultType="Long">
        SELECT `userid`
        FROM news_replies_like
        WHERE repliesid = #{id}
    </select>

    <select id="getReplies" resultMap="newsReplies">
        SELECT `id`,`userid`,`parentid`,`topicid`,`createtime`,`repliescontent`,`states`,`repliesuserid`
        FROM news_replies
        WHERE `topicid` = #{topicid} AND `parentid` = #{id}
    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into `actnews` (`corid`,`content`,`title`,`isnews`,`releaseuser`
        <trim prefix="," suffixOverrides=",">
            <if test="deptid!=null">
                `deptid`,
            </if>
<!--            <if test="videoid != null and videoid!=''">-->
<!--                `videoid`,-->
<!--            </if>-->
        </trim>
        )
        values(#{corId,jdbcType=INTEGER},
        #{content,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{isNews,jdbcType=INTEGER},
        #{releaseuser,jdbcType=INTEGER}
        <trim prefix="," suffixOverrides=",">
<!--            <if test="videoid != null and videoid!=''">-->
<!--                #{videoId,jdbcType=INTEGER},-->
<!--            </if>-->
            <if test="deptid != null">
                #{deptId,jdbcType=INTEGER},
            </if>
        </trim>
        )
    </insert>

    <update id="updateNews">
        update `actnews`
        <set>
            <if test="corId!=null">
                `corid` = #{corId,jdbcType=INTEGER},
            </if>
            <if test="content!=null">
                `content` = #{content,jdbcType=VARCHAR},
            </if>
<!--            <if test="videoid != null and videoid!=''">-->
<!--                `videoid` = #{videoId,jdbcType=INTEGER},-->
<!--            </if>-->
            <if test="deptid != null">
                `deptid` = #{deptId,jdbcType=INTEGER},
            </if>
            <if test="title!=null">
                `title` = #{title,jdbcType=VARCHAR},
            </if>
            <!--<if test="isNews!=null">-->
                <!--`isnews` = #{isNews,jdbcType=INTEGER},-->
            <!--</if>-->
            <!--<if test="releaseuser!=null">-->
                <!--`releaseuser` = #{releaseuser,jdbcType=INTEGER},-->
            <!--</if>-->
        </set>
        WHERE `id` = #{newsId,jdbcType=INTEGER}
    </update>
    <select id="
" resultMap="newsReplice">
        SELECT news_replies.`id`,news_replies.`userid`,news_replies.`parentid`,
        news_replies.`topicid`,news_replies.`createtime`,
        news_replies.`repliescontent`,news_replies.`repliesuserid`,news_replies.`states`
        FROM news_replies
        WHERE news_replies.`topicid` = #{pd.topicid} AND news_replies.`parentid` = #{pd.parentid}
    </select>
    <select id="getNewNewsReplice" resultMap="newsReplice">
        SELECT news_replies.`id`,news_replies.`userid`,news_replies.`parentid`,
        news_replies.`topicid`,news_replies.`createtime`,
        news_replies.`repliescontent`,news_replies.`repliesuserid`,news_replies.`states`
        FROM news_replies
        WHERE news_replies.`topicid` = #{topicid} AND news_replies.`parentid` = #{parentid}
    </select>
    <select id="selectlikeuser" resultType="io.renren.common.entity.PageData">
        SELECT userid FROM bbs_replies_like WHERE repliesid = #{id}
    </select>
    <select id="selectlikenum" resultType="io.renren.common.entity.PageData">
        SELECT count(*) num FROM bbs_replies_like WHERE repliesid = #{id}
    </select>
    <insert id="likereplies">
        insert into news_replies_like (userid,repliesid) values (#{userid},#{repliesid});
    </insert>
    <delete id="unlikereplies">
        DELETE FROM news_replies_like WHERE userid = #{userid} AND repliesid = #{repliesid}
    </delete>
    <insert id="replies">
        insert into news_replies (userid,parentid,topicid,repliescontent,repliesuserid)
        values (#{userid},#{parentid},#{topicid},#{repliescontent},#{repliesuserid});
    </insert>
    <update id="delete">
        UPDATE actnews
        SET actnews.`isnews` = '0'
        WHERE actnews.`id` = #{id}
    </update>
</mapper>